{"version":3,"sources":["store/actionTypes.js","services/weatherService.js","services/favoriteService.js","components/layout/Navbar.js","store/actions.js","components/modal/index.js","components/weather/WeatcherSearch.js","components/weather/Preview.js","components/weather/WeatherList.js","components/favorite/FavoriteCard.js","components/pages/Home.js","components/pages/Favorite.js","store/reducer.js","store/index.js","App.js","index.js"],"names":["SET_FORECAST","SET_SEARCH_RESULTS","SET_LIKES_ONLOAD","MANAGE_FAVORITE","SET_TEMP_UNIT","API_KEY","BASE_URL","loadForecast","city","a","concat","apikey","data","FIVE_DAYFORECAST_DATA","loadLocations","q","locations","LOCATIONS","filteredData","filter","location","LocalizedName","includes","loadCurrentData","CURRENTDATA","convertTempToCelsius","value","localStorage","getItem","JSON","parse","error","mapDispatchToProps","changeTempUnit","unit","dispatch","type","payload","console","log","connect","className","style","backgroundColor","to","src","alt","onChange","e","target","checked","onSliderClicked","Modal","msg","setError","onClick","setSearchResults","weatherService","res","name","Error","onCitySubmit","useState","query","setQuery","suggestedLocations","setSuggestedLocations","chosen","setChosen","handleSubmit","preventDefault","onChangeHandler","text","length","catch","err","message","onSubmit","autoComplete","placeholder","onBlur","setTimeout","map","index","Country","state","tempUnit","root","day","flag","temp","setTemp","tomorrow","Date","useEffect","format","setDate","getDate","K","C","WeatherList","forecast","chosenCity","Key","Temperature","WeatherText","Imperial","Metric","textDecoration","Value","Unit","setForecast","DailyForecasts","tempArr","forEach","obj","Maximum","celsius","toFixed","push","setLikesOnLoad","likedLocation","favoriteService","manageFavorites","favLocation","match","setChosenCity","likeState","setLikeState","currentCondition","setCurrentCondition","isPending","setPending","forecastError","setForecastError","currentConditionError","setCurrentError","params","id","mounted","localStorageFav","then","onLikeClicked","Button","variant","Favorite","favorites","setFavorites","favoritesData","setFavoritesData","setLoading","errors","favLocations","promiseArray","favoriteLocation","Promise","all","values","favCity","initialState","searchResults","rootReducer","combineReducers","action","updatedLikes","likedObj","setItem","stringify","likeStateUpdate","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","exact","path","component","Home","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ioMAAaA,EAAe,eACfC,EAAqB,qBACrBC,EAAmB,mBACnBC,EAAkB,kBAClBC,EAAgB,gB,gCCEvBC,G,MAAU,oCAEVC,EAAW,sCAyDF,GAAEC,aApDC,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACCH,EAASI,OAHL,2BAG+BF,GACxC,CACbG,OAAQN,GAHS,SAYXO,EAZW,YAYAC,GAZA,kBAaVD,EAAK,IAbK,wHAAH,sDAoDaE,cAjCZ,uCAAG,WAAON,GAAP,iBAAAC,EAAA,6DACAH,EAASI,OAxBV,qCAyBJ,CACbC,OAAQN,EACRU,EAAGP,GAJe,SAWZQ,EAXY,YAWIC,GAChBC,EAAeF,EAAUG,QAAO,SAACC,GAAD,OAAcA,EAASC,cAAcC,SAASd,MAZlE,kBAaXU,GAbW,wHAAH,sDAiC2BK,gBAdtB,SAACf,GAOvB,OADa,YAAOgB,IAQyCC,qBAJlC,SAACC,GAC5B,OAAQ,EAAI,GAAMA,EAAQ,MCpDb,EAVS,WACtB,IACE,OAAKC,aAAaC,QAAQ,SAGNC,KAAKC,MAAMH,aAAaC,QAAQ,UAF3C,GAIT,MAAOG,M,OC+BLC,EAAqB,CAAEC,eC0BC,SAACC,GAAD,OAAU,SAACC,GACvC,IACEA,EAAS,CAAEC,KAAMhC,EAAeiC,QAASH,IACzC,MAAOH,GACPO,QAAQC,IAAI,iCD5BDC,cAAQ,KAAMR,EAAdQ,EA/BA,SAAC,GAAwB,IAAtBP,EAAqB,EAArBA,eAMhB,OACE,qBAAKQ,UAAU,mDAAmDC,MAAO,CAAEC,gBAAiB,WAA5F,SACE,sBAAKF,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMG,GAAG,IAAT,SACE,qBAAKC,IAAI,+EAA+EC,IAAI,cAAcL,UAAU,WAEtH,sBAAKA,UAAU,mBAAf,UACE,wBAAOA,UAAU,SAAjB,UACE,uBAAOL,KAAK,WAAWW,SAAU,SAACC,GAAD,OAbnB,SAACA,GACvB,IAAItB,EAAQ,IACRsB,EAAEC,OAAOC,UAASxB,EAAQ,KAC9BO,EAAeP,GAUiCyB,CAAgBH,MACxD,sBAAMP,UAAU,oBAElB,cAAC,IAAD,CAAMG,GAAG,IAAIH,UAAU,WAAvB,kBAGA,cAAC,IAAD,CAAMG,GAAG,YAAYH,UAAU,uCAA/B,iC,eEFKW,G,MAxBD,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,IAAKC,EAA0B,EAA1BA,SAA0B,IAAhB9C,YAAgB,MAAT,GAAS,EAI9C,OACE,qBAAKiC,UAAU,YAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,SACE,yCAEF,qBAAKA,UAAU,cAAf,SACE,8BACGY,EACA7C,EAFH,SAKF,wBAAQiC,UAAU,iBAAiBc,QAfrB,WAClBD,EAAS,OAcL,0BC8CFtB,G,MAAqB,CACzBwB,iBFtC8B,SAAChD,GAAD,8CAAU,WAAO2B,GAAP,eAAA1B,EAAA,+EAEpBgD,EAAe3C,cAAcN,GAFT,UAGrB,WADXkD,EAFgC,QAG9BC,KAH8B,sBAI9BD,EAJ8B,cAMtCvB,EAAS,CACPC,KAAMnC,EACNoC,QAASqB,IAR2B,kBAU/BA,GAV+B,wCAYhCE,MAAM,6CAZ0B,0DAAV,yDEyCjBpB,cAAQ,KAAMR,EAAdQ,EA7DQ,SAAC,GAAwC,IAAtCqB,EAAqC,EAArCA,aAAcL,EAAuB,EAAvBA,iBACtC,EAA0BM,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoDF,mBAAS,IAA7D,mBAAOG,EAAP,KAA2BC,EAA3B,KACA,EAA4BJ,qBAA5B,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAA0BN,oBAAS,GAAnC,mBAAO/B,EAAP,KAAcuB,EAAd,KACMe,EAAY,uCAAG,WAAOrB,GAAP,SAAAvC,EAAA,sDACnBuC,EAAEsB,iBACFT,EAAaM,GAFM,2CAAH,sDAUZI,EAAe,uCAAG,WAAOC,GAAP,eAAA/D,EAAA,2DAClB+D,EAAKC,OAAS,GADI,gCAEJjB,EAAiBgB,GAAME,OAAM,SAACC,GAC5CrB,EAASqB,EAAIC,YAHK,OAEhBlB,EAFgB,OAKpBQ,EAAsBR,GALF,OAOtBM,EAASQ,GAPa,2CAAH,sDAgBrB,OACE,uBAAMK,SAAUR,EAAcS,aAAa,MAAMrC,UAAU,uDAA3D,UACGV,GAAS,cAAC,EAAD,CAAOsB,IAAKtB,EAAOuB,SAAUA,IACvC,sBAAKb,UAAU,cAAf,UACE,uBACEA,UAAU,+BACVL,KAAK,OACLuB,KAAK,OACLoB,YAAY,uBACZhC,SAAU,SAACC,GAAD,OAAOuB,EAAgBvB,EAAEC,OAAOvB,QAC1CA,MAAOqC,EACPiB,OAjBW,WACjBC,YAAW,WACTf,EAAsB,MACrB,QAgBC,qBAAKzB,UAAU,kDAAf,SACGwB,GACCA,EAAmBiB,KAAI,SAAC9D,EAAU+D,GAAX,OACrB,sBAAiB1C,UAAU,kBAAkBc,QAAS,kBApChES,GADiBxD,EAqC+DY,GApClEC,eACd+C,EAAU5D,QACV0D,EAAsB,IAHN,IAAC1D,GAqCP,UACGY,EAASC,cADZ,MAC8BD,EAASgE,QAAQ/D,gBADrC8D,iB,iBC5BT3C,eAJS,SAAC6C,GAAD,MAAY,CAClCC,SAAUD,EAAME,KAAKD,YAGiB,KAAzB9C,EArBC,SAAC,GAA6B,IAA3BgD,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,KAAMH,EAAe,EAAfA,SAC5B,EAAwBxB,mBAAS,IAAjC,mBAAO4B,EAAP,KAAaC,EAAb,KACMC,EAAW,IAAIC,KAKrB,OAJAC,qBAAU,WACRH,EAAQH,MAIR,qBAAK/C,UAAU,2CAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,cAAC,IAAD,CAAQsD,OAAO,OAAf,SAAuBH,EAASI,SAAQ,IAAIH,MAAOI,UAAYR,KACjD,MAAbH,EAAmB,gCAAMI,EAAKQ,EAAX,YAAyB,gCAAMR,EAAKS,EAAX,oBCFtCC,EAVK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OACE,qBAAK5D,UAAU,wBAAf,SACG4D,EAASnB,KAAI,SAACM,EAAKL,GAAN,OACZ,cAAC,EAAD,CAAqBK,IAAKA,EAAKC,KAAMN,EAAQ,GAA/BA,SCuBP3C,eAJS,SAAC6C,GAAD,MAAY,CAClCC,SAAUD,EAAME,KAAKD,YAGiB,KAAzB9C,EA5BM,SAAC,GAAoC,IAAlC5B,EAAiC,EAAjCA,KAAM0F,EAA2B,EAA3BA,WAAYhB,EAAe,EAAfA,SACxC,EAAwBxB,mBAAS,IAAjC,mBAAO4B,EAAP,KAAaC,EAAb,KACQY,EAAuBD,EAAvBC,IAAKlF,EAAkBiF,EAAlBjF,cAEb,EAAqCT,EAAK,GAAlC4F,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,YAOrB,OALAX,qBAAU,WACcH,EAAL,MAAbL,EAA0BkB,EAAYE,SAC7BF,EAAYG,WAIzB,cAAC,IAAD,CAAM/D,GAAE,WAAM2D,GAAO7D,MAAO,CAAEkE,eAAgB,QAA9C,SACE,sBAAKnE,UAAU,+CAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BpB,IAC5B,oBAAGoB,UAAU,YAAb,UACGiD,EAAKmB,MADR,IACgBnB,EAAKoB,QAErB,mBAAGrE,UAAU,YAAb,SAA0BgE,YC2F5BzE,EAAqB,CACzB+E,YN9GyB,SAACrF,GAAD,8CAAW,WAAOS,GAAP,mBAAA1B,EAAA,+EAEhBgD,EAAelD,aAAamB,GAFZ,UAGjB,WADXgC,EAF4B,QAG1BC,KAH0B,sBAI1BD,EAJ0B,OAM1BsD,EAAmBtD,EAAnBsD,eACJC,EAAU,GACdD,EAAeE,SAAQ,SAAC1B,GACtB,IAAI2B,EAAM,GACVA,EAAIjB,EAAIV,EAAIgB,YAAYY,QAAQP,MAChC,IAAIQ,EAAU5D,EAAehC,qBAAqB0F,EAAIjB,GACtDiB,EAAIhB,EAAIkB,EAAQC,QAAQ,GACxBL,EAAQM,KAAKJ,MAEfhF,EAAS,CACPC,KAAMpC,EACNqC,QAAS4E,IAjBuB,wDAoB5BrD,MAAM,gDApBsB,0DAAX,uDM+GzB4D,eNvE4B,kBAAM,SAACrF,GACnC,IACE,IAAMsF,EAAgBC,IACtBvF,EAAS,CACPC,KAAMlC,EACNmC,QAASoF,IAEX,MAAO1F,GACPO,QAAQC,IAAIR,MMgEd4F,gBN5D6B,SAACC,GAAD,OAAiB,SAACzF,GAC/C,IACEA,EAAS,CAAEC,KAAMjC,EAAiBkC,QAASuF,IAC3C,MAAO7F,GACPO,QAAQC,IAAI,sCM2DDC,eAVS,SAAC6C,GAAD,MAAY,CAClCgB,SAAUhB,EAAME,KAAKc,YASiBrE,EAAzBQ,EAzGK,SAAC,GAAuE,IAArE6D,EAAoE,EAApEA,SAAUU,EAA0D,EAA1DA,YAAaS,EAA6C,EAA7CA,eAAgBG,EAA6B,EAA7BA,gBAAiBE,EAAY,EAAZA,MAE7E,EAAoC/D,mBADhB,CAAEyC,IAAK,SAAUlF,cAAe,aACpD,mBAAOiF,EAAP,KAAmBwB,EAAnB,KACA,EAAkChE,qBAAlC,mBAAOiE,EAAP,KAAkBC,EAAlB,KACA,EAAgDlE,qBAAhD,mBAAOmE,EAAP,KAAyBC,EAAzB,KACA,EAAgCpE,oBAAS,GAAzC,mBAAOqE,EAAP,KAAkBC,EAAlB,KACA,EAA0CtE,mBAAS,MAAnD,mBAAOuE,EAAP,KAAsBC,EAAtB,KACA,EAAiDxE,mBAAS,MAA1D,mBAAOyE,EAAP,KAA8BC,EAA9B,KAEM3E,EAAY,uCAAG,WAAOrD,GAAP,iBAAAC,EAAA,sDACX8F,EAAuB/F,EAAvB+F,IAAKlF,EAAkBb,EAAlBa,cAEbyG,EADqB,CAAEvB,MAAKlF,kBAFT,2CAAH,sDAMlByE,qBAAU,WACR,GAAI+B,EAAMY,OAAOC,GAAI,CACnB,IACIxH,EADcW,KAAKC,MAAMH,aAAaC,QAAQ,UACnBT,QAAO,SAACC,GAAD,OAAcA,EAASmF,MAAQsB,EAAMY,OAAOC,MAClFZ,EAAc5G,EAAa,OAE5B,CAAC2G,IAEJ/B,qBAAU,WACR,GAAmB,OAAfQ,EAAqB,CACvB,IAAIqC,GAAU,EACdP,GAAW,GACX,IAAMQ,EAAkBjH,aAAaC,QAAQ,SAM7C,GALA4F,IACAQ,GAAa,WACX,cAAOY,QAAP,IAAOA,OAAP,EAAOA,EAAiBtH,SAASgF,EAAWC,QAG1CoC,EAAS,CAYX,IAAIV,EAAmBxE,EAAelC,gBAAgB+E,EAAWC,KACjE2B,EAAoBD,GACpBO,EAAgB,MAEhBzB,EAAYT,EAAWC,KACpBsC,MAAK,kBAAMP,EAAiB,SAC5B5D,OAAM,SAAC3C,GACNqG,GAAW,GACXE,EAAiBvG,EAAM6C,YAK7B,OAFAwD,GAAW,GAEJ,kBAAOO,GAAU,MAEzB,CAACrC,EAAYS,IAEhB,IAAM+B,EAAgB,WACpBnB,EAAgBrB,GAChB0B,GAAcD,IAGhB,OACE,sBAAKtF,UAAU,YAAf,UACE,cAAC,EAAD,CAAgBoB,aAAcA,IAC7BsE,GAAa,8CACd,gCACE,qBAAI1F,UAAU,mBAAd,qCAA0D6D,EAAWjF,iBACrE,sBAAKoB,UAAU,SAAf,UACG8F,GAAyB,cAAC,EAAD,CAAOlF,IAAKkF,EAAuBjF,SAAUkF,EAAiBhI,KAAM8F,EAAWjF,gBACxG4G,GAAoB,cAAC,EAAD,CAAcrH,KAAMqH,EAAkB3B,WAAYA,IACvE,qBAAK7D,UAAU,4BAAf,SACIsF,EAKA,cAACgB,EAAA,EAAD,CAAQxF,QAASuF,EAAeE,QAAQ,SAAxC,6BAJA,cAACD,EAAA,EAAD,CAAQxF,QAASuF,EAAeE,QAAQ,UAAxC,mCAULX,GAAiB,cAAC,EAAD,CAAOhF,IAAKgF,EAAe/E,SAAUgF,IACtDjC,GAAY,cAAC,EAAD,CAAaA,SAAUA,aClD7B4C,EA9CE,WACf,MAAkCnF,mBAAS,IAA3C,mBAAOoF,EAAP,KAAkBC,EAAlB,KACA,EAA0CrF,mBAAS,IAAnD,mBAAOsF,EAAP,KAAsBC,EAAtB,KACA,EAA8BvF,oBAAS,GAAvC,mBAAgBwF,GAAhB,WACA,EAA2BxF,mBAAS,MAApC,mBAAOyF,EAAP,KAAejG,EAAf,KAwBA,OAtBAwC,qBAAU,WACR,IAAM0D,EAAe7H,aAAaC,QAAQ,SACxBuH,EAAdK,EAA2B3H,KAAKC,MAAM0H,GACxB,MACjB,IAEH1D,qBAAU,WACRwD,GAAW,GACX,IAAIG,EAAe,GACnBP,EAAUhC,SAAQ,SAACwC,GACjBD,EAAalC,KAAK9D,EAAelC,gBAAgBmI,EAAiBnD,SAEpEoD,QAAQC,IAAIH,GACTZ,MAAK,SAAUgB,GACdR,EAAiBQ,MAElBnF,OAAM,SAACC,GACNrB,EAAS,uDAEbgG,GAAW,KACV,CAACJ,IAGF,sBAAKzG,UAAU,wBAAf,UACG8G,GAAU,cAAC,EAAD,CAAOlG,IAAKkG,EAAQjG,SAAUA,IACzC,qBAAKb,UAAU,kBAAf,SACE,2DAED2G,EAAc3E,OAAS,GACtB,qBAAKhC,UAAU,eAAf,SACGyG,EAAUhE,KAAI,SAAC4E,EAAS3E,GAAV,OACb,cAAC,EAAD,CAA0BvE,KAAMwI,EAAcjE,GAAQmB,WAAYwD,GAA/C3E,QAIC,IAAzBiE,EAAc3E,QAAgB,oBAAIhC,UAAU,cAAd,yE,gCC9C/BsH,EAAe,CACnB1D,SAAU,KACV2D,cAAe,GACfd,UAAW,GACX5D,SAAU,KCAZ,IAAM2E,EAAcC,0BAAgB,CAClC3E,KDEa,WAAgD,IAA/BF,EAA8B,uDAAtB0E,EAAcI,EAAQ,uCACpD/H,EAAkB+H,EAAlB/H,KAAMC,EAAY8H,EAAZ9H,QAEd,OAAQD,GACN,KAAKpC,EACH,OAAO,2BACFqF,GADL,IAEEgB,SAAUhE,IAEd,KAAKpC,EACH,OAAO,2BACFoF,GADL,IAEE2E,cAAc,YAAK3H,KAEvB,KAAKnC,EACH,OAAO,2BACFmF,GADL,IAEE6D,UAAW7G,IAEf,KAAKlC,EACH,IAAK,IAAMgF,KAASE,EAAM6D,UACxB,GAAI7D,EAAM6D,UAAU/D,GAAOoB,MAAQlE,EAAQkE,IAAK,CAC9C,IAAI6D,EAAe/E,EAAM6D,UAAU/H,QAAO,SAACkJ,GAAD,OAAcA,EAAS9D,MAAQlE,EAAQkE,OAEjF,OADA5E,aAAa2I,QAAQ,QAASzI,KAAK0I,UAAUH,IACtC,2BAAK/E,GAAZ,IAAmB6D,UAAWkB,IAGlC,IAAMI,EAAe,sBAAOnF,EAAM6D,WAAb,CAAwB7G,IAE7C,OADAV,aAAa2I,QAAQ,QAASzI,KAAK0I,UAAUC,IACtC,2BACFnF,GADL,IAEE6D,UAAU,GAAD,mBAAM7D,EAAM6D,WAAZ,CAAuB7G,MAEpC,KAAKjC,EACH,OAAO,2BAAKiF,GAAZ,IAAmBC,SAAUjD,IAE/B,QACE,OAAOgD,MClCEoF,EAFDC,sBAAYT,EAAaU,8BAAoBC,0BAAgBC,OCgB5DC,MAff,WACE,OACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,YAAYC,UAAWhC,IACzC,cAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,OAAOC,UAAWC,aCd9CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6c62bd9b.chunk.js","sourcesContent":["export const SET_FORECAST = 'SET_FORECAST';\r\nexport const SET_SEARCH_RESULTS = 'SET_SEARCH_RESULTS';\r\nexport const SET_LIKES_ONLOAD = 'SET_LIKES_ONLOAD';\r\nexport const MANAGE_FAVORITE = 'MANAGE_FAVORITE';\r\nexport const SET_TEMP_UNIT = 'SET_TEMP_UNIT';\r\n","// JSON imports\r\nimport FIVE_DAYFORECAST_DATA from '../dummy-data/5dayforcast.json';\r\nimport LOCATIONS from '../dummy-data/default-location.json';\r\nimport CURRENTDATA from '../dummy-data/currentdata.json';\r\n\r\nimport axios from 'axios';\r\nconst API_KEY = 'tPldUTKSv7z2ARd48H295HMusATWIkEP';\r\n// const API_KEY = '6N5Cg49mSPyEJID7d3UWP7LYaRuVwSde';\r\nconst BASE_URL = 'http://dataservice.accuweather.com/';\r\nconst AUTOCOMPLETE = 'locations/v1/cities/autocomplete/';\r\nconst CURRENT = 'currentconditions/v1/'; //+ location key\r\nconst FIVE_DAY_FORECAST = 'forecasts/v1/daily/5day/'; // + location key\r\n\r\nconst loadForecast = async (city) => {\r\n  const requestPath = BASE_URL.concat(FIVE_DAY_FORECAST, city);\r\n  const params = {\r\n    apikey: API_KEY,\r\n  };\r\n  try {\r\n    // const res = await axios.get(requestPath, { params }).catch((error) => {\r\n    //   throw error.toJSON();\r\n    // });\r\n    // const data = await res.data;\r\n    // return data;\r\n\r\n    const data = [...FIVE_DAYFORECAST_DATA]; //DELETE THIS AFTERWARDS. SENDING REQUEST TO API WORKS\r\n    return data[0]; //remove\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst loadLocations = async (city) => {\r\n  const requestPath = BASE_URL.concat(AUTOCOMPLETE);\r\n  const params = {\r\n    apikey: API_KEY,\r\n    q: city,\r\n  };\r\n  try {\r\n    // const res = await axios.get(requestPath, { params }).catch((error) => {\r\n    //   throw error.toJSON();\r\n    // });\r\n    // const locations = await res.data;\r\n    const locations = [...LOCATIONS]; //remove\r\n    const filteredData = locations.filter((location) => location.LocalizedName.includes(city));\r\n    return filteredData;\r\n  } catch (error) {\r\n    return error; //Return error and display with toast\r\n  }\r\n};\r\n\r\nconst loadCurrentData = (city) => {\r\n  // const requestPath = BASE_URL.concat(CURRENT, city);\r\n  // const params = {\r\n  //   apikey: API_KEY,\r\n  // };\r\n  // return axios.get(requestPath, { params });\r\n  const current = [...CURRENTDATA];\r\n  return current;\r\n};\r\n\r\nconst convertTempToCelsius = (value) => {\r\n  return (5 / 9) * (value - 32);\r\n};\r\n\r\nexport default { loadForecast, loadLocations, loadCurrentData, convertTempToCelsius };\r\n","const getFavLocations = () => {\r\n  try {\r\n    if (!localStorage.getItem('likes')) {\r\n      return [];\r\n    }\r\n    const parsedLikes = JSON.parse(localStorage.getItem('likes'));\r\n    return parsedLikes;\r\n  } catch (error) {}\r\n};\r\n\r\nexport default { getFavLocations };\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './navbar.css';\r\n\r\nimport { changeTempUnit } from '../../store/actions';\r\n\r\nconst Navbar = ({ changeTempUnit }) => {\r\n  const onSliderClicked = (e) => {\r\n    let value = 'F';\r\n    if (e.target.checked) value = 'C';\r\n    changeTempUnit(value);\r\n  };\r\n  return (\r\n    <nav className='navbar navbar-expand-lg navbar-light mb-4 shadow' style={{ backgroundColor: '#e3f2fd' }}>\r\n      <div className='container-fluid'>\r\n        <Link to='/'>\r\n          <img src='https://i.pinimg.com/originals/77/0b/80/770b805d5c99c7931366c2e84e88f251.png' alt='Weather-App' className='logo' />\r\n        </Link>\r\n        <div className='d-flex flex-row '>\r\n          <label className='switch'>\r\n            <input type='checkbox' onChange={(e) => onSliderClicked(e)} />\r\n            <span className='slider round'></span>\r\n          </label>\r\n          <Link to='/' className='p-2 link'>\r\n            Home\r\n          </Link>\r\n          <Link to='/favorite' className='btn btn-primary p-2 link link__btn  '>\r\n            Favorite\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = { changeTempUnit };\r\n\r\nexport default connect(null, mapDispatchToProps)(Navbar);\r\n","import { SET_FORECAST, SET_SEARCH_RESULTS, SET_LIKES_ONLOAD, MANAGE_FAVORITE, SET_TEMP_UNIT } from './actionTypes';\r\nimport weatherService from '../services/weatherService';\r\nimport favoriteService from '../services/favoriteService';\r\n\r\nexport const setForecast = (value) => async (dispatch) => {\r\n  try {\r\n    const res = await weatherService.loadForecast(value);\r\n    if (res.name === 'Error') {\r\n      throw res;\r\n    }\r\n    const { DailyForecasts } = res;\r\n    let tempArr = [];\r\n    DailyForecasts.forEach((day) => {\r\n      let obj = {};\r\n      obj.K = day.Temperature.Maximum.Value;\r\n      let celsius = weatherService.convertTempToCelsius(obj.K);\r\n      obj.C = celsius.toFixed(0);\r\n      tempArr.push(obj);\r\n    });\r\n    dispatch({\r\n      type: SET_FORECAST,\r\n      payload: tempArr,\r\n    });\r\n  } catch (error) {\r\n    throw Error(\"Could't access AccuWeather and load forecast\");\r\n  }\r\n};\r\n\r\nexport const setSearchResults = (city) => async (dispatch) => {\r\n  try {\r\n    const res = await weatherService.loadLocations(city);\r\n    if (res.name === 'Error') {\r\n      throw res;\r\n    }\r\n    dispatch({\r\n      type: SET_SEARCH_RESULTS,\r\n      payload: res,\r\n    });\r\n    return res;\r\n  } catch (err) {\r\n    throw Error(\"Couldn't send search query to AccuWeather\");\r\n  }\r\n};\r\n\r\nexport const setLikesOnLoad = () => (dispatch) => {\r\n  try {\r\n    const likedLocation = favoriteService.getFavLocations();\r\n    dispatch({\r\n      type: SET_LIKES_ONLOAD,\r\n      payload: likedLocation,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const manageFavorites = (favLocation) => (dispatch) => {\r\n  try {\r\n    dispatch({ type: MANAGE_FAVORITE, payload: favLocation });\r\n  } catch (error) {\r\n    console.log(\"Couldn't set like for location\");\r\n  }\r\n};\r\n\r\nexport const changeTempUnit = (unit) => (dispatch) => {\r\n  try {\r\n    dispatch({ type: SET_TEMP_UNIT, payload: unit });\r\n  } catch (error) {\r\n    console.log(\"Couldn't change temp unit\");\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nimport './modal.css';\r\nconst Modal = ({ msg, setError, city = '' }) => {\r\n  const clickHandle = () => {\r\n    setError(null);\r\n  };\r\n  return (\r\n    <div className='modal__bg'>\r\n      <div className='modal__card'>\r\n        <div className='modal__title'>\r\n          <h1>Error</h1>\r\n        </div>\r\n        <div className='modal__body'>\r\n          <p>\r\n            {msg}\r\n            {city}.\r\n          </p>\r\n        </div>\r\n        <button className='btn btn-danger' onClick={clickHandle}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setSearchResults } from '../../store/actions';\r\nimport Modal from '../modal';\r\n\r\nimport '../../App.css';\r\n\r\nconst WeatcherSearch = ({ onCitySubmit, setSearchResults }) => {\r\n  const [query, setQuery] = useState('');\r\n  const [suggestedLocations, setSuggestedLocations] = useState([]);\r\n  const [chosen, setChosen] = useState();\r\n  const [error, setError] = useState(false);\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    onCitySubmit(chosen);\r\n  };\r\n\r\n  const onSuggest = (city) => {\r\n    setQuery(city.LocalizedName);\r\n    setChosen(city);\r\n    setSuggestedLocations([]);\r\n  };\r\n  const onChangeHandler = async (text) => {\r\n    if (text.length > 0) {\r\n      let res = await setSearchResults(text).catch((err) => {\r\n        setError(err.message);\r\n      });\r\n      setSuggestedLocations(res);\r\n    }\r\n    setQuery(text);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setTimeout(() => {\r\n      setSuggestedLocations([]);\r\n    }, 100);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete='off' className='d-flex flex-column container align-items-center mb-5'>\r\n      {error && <Modal msg={error} setError={setError} />}\r\n      <div className='form__input'>\r\n        <input\r\n          className='col-md-12 input form-control'\r\n          type='text'\r\n          name='name'\r\n          placeholder='Weather report at...'\r\n          onChange={(e) => onChangeHandler(e.target.value)}\r\n          value={query}\r\n          onBlur={handleBlur}\r\n        />\r\n        <div className='col-md-12 justify-content-md-center list-group '>\r\n          {suggestedLocations &&\r\n            suggestedLocations.map((location, index) => (\r\n              <div key={index} className='list-group-item' onClick={() => onSuggest(location)}>\r\n                {location.LocalizedName} - {location.Country.LocalizedName}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setSearchResults,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(WeatcherSearch);\r\n","import React, { useState, useEffect } from 'react';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\n\r\nimport '../../App.css';\r\n\r\nconst Preview = ({ day, flag, tempUnit }) => {\r\n  const [temp, setTemp] = useState({});\r\n  const tomorrow = new Date();\r\n  useEffect(() => {\r\n    setTemp(day);\r\n  });\r\n\r\n  return (\r\n    <div className='card bg-dark text-white text-center w-15'>\r\n      <div className='card__text__holder'>\r\n        <Moment format='dddd'>{tomorrow.setDate(new Date().getDate() + flag)}</Moment>\r\n        {tempUnit === 'F' ? <div>{temp.K} °F</div> : <div>{temp.C} °C</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tempUnit: state.root.tempUnit,\r\n});\r\n// export default Preview;\r\nexport default connect(mapStateToProps, null)(Preview);\r\n","import React from 'react';\r\n\r\nimport '../../App.css';\r\n\r\nimport Preview from './Preview';\r\nconst WeatherList = ({ forecast }) => {\r\n  return (\r\n    <div className='container pt-5 holder'>\r\n      {forecast.map((day, index) => (\r\n        <Preview key={index} day={day} flag={index + 1} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FavoriteCard = ({ data, chosenCity, tempUnit }) => {\r\n  const [temp, setTemp] = useState({});\r\n  const { Key, LocalizedName } = chosenCity;\r\n  // const { Temperature, WeatherText } = data.data[0];\r\n  const { Temperature, WeatherText } = data[0]; //REMOVE\r\n\r\n  useEffect(() => {\r\n    if (tempUnit === 'F') setTemp(Temperature.Imperial);\r\n    else setTemp(Temperature.Metric);\r\n  });\r\n\r\n  return (\r\n    <Link to={`/${Key}`} style={{ textDecoration: 'none' }}>\r\n      <div className='card bg-dark text-white text-center p-2 w-15'>\r\n        <h4 className='card-title'>{LocalizedName}</h4>\r\n        <p className='card-text'>\r\n          {temp.Value} {temp.Unit}\r\n        </p>\r\n        <p className='card-text'>{WeatherText}</p>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tempUnit: state.root.tempUnit,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(FavoriteCard);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport WeatcherSearch from '../weather/WeatcherSearch';\r\nimport WeatherList from '../weather/WeatherList';\r\nimport FavoriteCard from '../favorite/FavoriteCard';\r\nimport Modal from '../modal';\r\n\r\nimport weatherService from '../../services/weatherService';\r\n\r\nimport { manageFavorites, setForecast, setLikesOnLoad } from '../../store/actions';\r\n\r\nconst WeatherMain = ({ forecast, setForecast, setLikesOnLoad, manageFavorites, match }) => {\r\n  const defaultCity = { Key: '215854', LocalizedName: 'Tel Aviv' };\r\n  const [chosenCity, setChosenCity] = useState(defaultCity);\r\n  const [likeState, setLikeState] = useState();\r\n  const [currentCondition, setCurrentCondition] = useState();\r\n  const [isPending, setPending] = useState(false);\r\n  const [forecastError, setForecastError] = useState(null);\r\n  const [currentConditionError, setCurrentError] = useState(null);\r\n\r\n  const onCitySubmit = async (city) => {\r\n    const { Key, LocalizedName } = city;\r\n    const newStateCity = { Key, LocalizedName };\r\n    setChosenCity(newStateCity);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (match.params.id) {\r\n      let favLoctions = JSON.parse(localStorage.getItem('likes'));\r\n      let filteredData = favLoctions.filter((location) => location.Key === match.params.id);\r\n      setChosenCity(filteredData[0]);\r\n    }\r\n  }, [match]);\r\n\r\n  useEffect(() => {\r\n    if (chosenCity !== null) {\r\n      let mounted = true;\r\n      setPending(true);\r\n      const localStorageFav = localStorage.getItem('likes');\r\n      setLikesOnLoad();\r\n      setLikeState(() => {\r\n        return localStorageFav?.includes(chosenCity.Key);\r\n      });\r\n\r\n      if (mounted) {\r\n        // weatherService\r\n        //   .loadCurrentData(chosenCity.Key)\r\n        //   .then((data) => {\r\n        //     setCurrentCondition(data);\r\n        //     setCurrentError(null);\r\n        //   })\r\n        //   .catch((error) => {\r\n        //     setPending(false);\r\n        //     setCurrentError(\"Could't access AccuWeather and load current condition for \", chosenCity);\r\n        //   });\r\n\r\n        let currentCondition = weatherService.loadCurrentData(chosenCity.Key); //remove these 3 lines\r\n        setCurrentCondition(currentCondition);\r\n        setCurrentError(null);\r\n\r\n        setForecast(chosenCity.Key)\r\n          .then(() => setForecastError(null))\r\n          .catch((error) => {\r\n            setPending(false);\r\n            setForecastError(error.message);\r\n          });\r\n      }\r\n      setPending(false);\r\n\r\n      return () => (mounted = false);\r\n    }\r\n  }, [chosenCity, setForecast]);\r\n\r\n  const onLikeClicked = () => {\r\n    manageFavorites(chosenCity);\r\n    setLikeState(!likeState);\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <WeatcherSearch onCitySubmit={onCitySubmit} />\r\n      {isPending && <div>Loading ...</div>}\r\n      <div>\r\n        <h1 className='mb-5 text-center'>This is the weather for {chosenCity.LocalizedName}</h1>\r\n        <div className='holder'>\r\n          {currentConditionError && <Modal msg={currentConditionError} setError={setCurrentError} city={chosenCity.LocalizedName} />}\r\n          {currentCondition && <FavoriteCard data={currentCondition} chosenCity={chosenCity} />}\r\n          <div className='d-flex align-items-center'>\r\n            {!likeState ? (\r\n              <Button onClick={onLikeClicked} variant='success'>\r\n                Add to Favorites\r\n              </Button>\r\n            ) : (\r\n              <Button onClick={onLikeClicked} variant='danger'>\r\n                Remove Favorite\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {forecastError && <Modal msg={forecastError} setError={setForecastError} />}\r\n        {forecast && <WeatherList forecast={forecast} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  forecast: state.root.forecast,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setForecast,\r\n  setLikesOnLoad,\r\n  manageFavorites,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherMain);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport FavoriteCard from '../favorite/FavoriteCard';\r\nimport Modal from '../modal';\r\n\r\nimport weatherService from '../../services/weatherService';\r\n\r\nconst Favorite = () => {\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [favoritesData, setFavoritesData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [errors, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const favLocations = localStorage.getItem('likes');\r\n    if (favLocations) setFavorites(JSON.parse(favLocations));\r\n    else setFavorites([]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    let promiseArray = [];\r\n    favorites.forEach((favoriteLocation) => {\r\n      promiseArray.push(weatherService.loadCurrentData(favoriteLocation.Key));\r\n    });\r\n    Promise.all(promiseArray)\r\n      .then(function (values) {\r\n        setFavoritesData(values);\r\n      })\r\n      .catch((err) => {\r\n        setError(\"Couldn't get details for your favorite locations\");\r\n      });\r\n    setLoading(false);\r\n  }, [favorites]);\r\n\r\n  return (\r\n    <div className='fav__list__holder m-5'>\r\n      {errors && <Modal msg={errors} setError={setError} />}\r\n      <div className='fav__title mb-5'>\r\n        <h1>Your favorite locations</h1>\r\n      </div>\r\n      {favoritesData.length > 0 && (\r\n        <div className='grid__holder'>\r\n          {favorites.map((favCity, index) => (\r\n            <FavoriteCard key={index} data={favoritesData[index]} chosenCity={favCity} />\r\n          ))}\r\n        </div>\r\n      )}\r\n      {favoritesData.length === 0 && <h1 className='text-center'>Select locations on home page and add them to favorites</h1>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favorite;\r\n","import { SET_FORECAST, SET_SEARCH_RESULTS, SET_LIKES_ONLOAD, MANAGE_FAVORITE, SET_TEMP_UNIT } from './actionTypes';\r\n\r\nconst initialState = {\r\n  forecast: null,\r\n  searchResults: [],\r\n  favorites: [],\r\n  tempUnit: 'F',\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_FORECAST:\r\n      return {\r\n        ...state,\r\n        forecast: payload,\r\n      };\r\n    case SET_SEARCH_RESULTS:\r\n      return {\r\n        ...state,\r\n        searchResults: [...payload],\r\n      };\r\n    case SET_LIKES_ONLOAD:\r\n      return {\r\n        ...state,\r\n        favorites: payload,\r\n      };\r\n    case MANAGE_FAVORITE:\r\n      for (const index in state.favorites) {\r\n        if (state.favorites[index].Key === payload.Key) {\r\n          let updatedLikes = state.favorites.filter((likedObj) => likedObj.Key !== payload.Key);\r\n          localStorage.setItem('likes', JSON.stringify(updatedLikes));\r\n          return { ...state, favorites: updatedLikes };\r\n        }\r\n      }\r\n      const likeStateUpdate = [...state.favorites, payload];\r\n      localStorage.setItem('likes', JSON.stringify(likeStateUpdate));\r\n      return {\r\n        ...state,\r\n        favorites: [...state.favorites, payload],\r\n      };\r\n    case SET_TEMP_UNIT:\r\n      return { ...state, tempUnit: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducer from './reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  root: reducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Navbar from './components/layout/Navbar';\r\nimport Home from './components/pages/Home';\r\nimport Favorite from './components/pages/Favorite';\r\n\r\nimport store from './store';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route exact path='/favorite' component={Favorite} />\r\n          <Route exact path='/:id' component={Home} />\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}